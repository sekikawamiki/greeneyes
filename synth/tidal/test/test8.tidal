d1 $ every 4 (slow 2) $ whenmod 5 3 (# speed "0.75 1.5") $ stack[
s "bd bd*2",
s "hh*2 [sn cp] cp future*2",
s (samples "arpy*8" (run 16))
] # speed "[[1 0.8],[1.5 2]*2]/3"

d1 silence

d2 $ sound (samples "arpy*8" (run 12)) # speed "0.25" # cut "1"

d2 silence

d3 $ s (samples "bass2*8" (run 12)) # speed "0.25" # cut "2"

d3 silence

d4 $ stack [
s (samples "arpy*8" (irand 12)) # speed "0.25" # cut "1",
s (samples "bass*8" (irand 12)) # speed "0.25" # cut "2"
]

d4 silence

d5 $ slow 1.75 $ cat [
s "amencutup:0 amencutup:1 amencutup:2(1,3) amencutup:2(1,3,1) amencutup:2(1,3,1) amencutup(2,7) amencutup:2(1,3) amencutup:2(1,3,1)" # pan (scale 1 3 saw1),
s "amencutup:0 amencutup:1 amencutup:2(1,3) amencutup:2(1,3,1) amencutup:2(1,3,1) amencutup(2,7) amencutup:2(1,3) amencutup:2(1,3,1)" # pan (scale 1 3 saw1),
s "amencutup:0 amencutup:1 amencutup:2(1,3) amencutup:2(1,3,1) amencutup:2(1,3,1) amencutup ~ amencutup:2" # pan (scale 1 3 saw1),
s "amencutup:2(1,3,1) amencutup(2,7) amencutup:2(1,3) amencutup:2(1,3,1) amencutup:2(1,3,1) amencutup ~ amencutup:2" # pan (scale 1 3 saw1)
] # gain "0.8"

d5 silence

d6 $ loopAt 2 $ s "breaks125"

d6 silence

d7 $ s "arpy*8" # bandf "6000"

d7 silence

d8 $ s "breaks125*8" # unit "c" # begin "-1" # cut "-1" # coarse "1 2 4 8 16 32 64 128"

d8 silence

d9 $ (chop 8 $ sound "breaks125") # unit "c" # coarse "1 2 4 8 16 32 64 128"

d9 silence
